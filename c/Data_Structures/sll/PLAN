SLL Node functions:
	Create node
	Delete node
	Print node

SLL functions:
	Insert:
		AtFirst (data, node)
		AtEnd (data, node)
		AtPos (data, node)
		Atpos from end (data, node)
	Remove:
		AtFirst (data, node)
		AtEnd (data, node)
		AtPos (data, node)
		Atpos from end (data, node)
		data, node # find and remove matching node/data
		Remove specified node (swap next.. works only if not last node */
	Find:
		Find (node, data)
		nth Element from the front
		nth Element from the end
		Smallest element in the SLL
		Largest element in the SLL
		kth order statistics 
			kth smallest element in the SLL
			kth largest element in the SLL
		find element next smaller than key in the SLL
		find element next larger than key in the SLL
	Print:
		PrintSLL
		PrintSLL reverse
		printSLL recursive
		printSLL reverse recursive
	Sort:
		Place(data)
		Sort SLL
	Export:
		(To containers)
		To xor LL (inplace)
	Import:
		(From containers)
	splice:
		pos1-pos2
	Set Operations:
		Join
		Union
		Intersection
		Find point of intersection
	Loop:
		find if loop exists
		find node at which sll loops
	Reverse:
		reverse
		reverse recursive
	Destroy:
		Destroy SLL completely
	
